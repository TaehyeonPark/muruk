name: CICD

on:
  push:
    branches: ["main", "dev"]

jobs:
  run-cicd-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential libffi-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set environment variables
        env:
          USERS: ${{ secrets.USERS }}
          DEVICES_PATH: ${{ vars.DEVICES_PATH }}
          PRESETS_PATH: ${{ vars.PRESETS_PATH }}
          UTILS_PATH: ${{ vars.UTILS_PATH }}
          SUPER_SECRET_KEY: ${{ secrets.SUPER_SECRET_KEY }}
        run: |
          echo "Environment variables have been set."

      - name: Run Unit Tests
        env:
          USERS: ${{ secrets.USERS }}
          DEVICES_PATH: ${{ vars.DEVICES_PATH }}
          PRESETS_PATH: ${{ vars.PRESETS_PATH }}
          UTILS_PATH: ${{ vars.UTILS_PATH }}
          SUPER_SECRET_KEY: ${{ secrets.SUPER_SECRET_KEY }}
        run: |
          bash .github/workflows/unit_tests.sh

      - name: Run Mutation Tests
        env:
          USERS: ${{ secrets.USERS }}
          DEVICES_PATH: ${{ vars.DEVICES_PATH }}
          PRESETS_PATH: ${{ vars.PRESETS_PATH }}
          UTILS_PATH: ${{ vars.UTILS_PATH }}
          SUPER_SECRET_KEY: ${{ secrets.SUPER_SECRET_KEY }}
        run: |
          bash .github/workflows/mutation_tests.sh

      - name: Run Integration Tests
        env:
          USERS: ${{ secrets.USERS }}
          DEVICES_PATH: ${{ vars.DEVICES_PATH }}
          PRESETS_PATH: ${{ vars.PRESETS_PATH }}
          UTILS_PATH: ${{ vars.UTILS_PATH }}
          SUPER_SECRET_KEY: ${{ secrets.SUPER_SECRET_KEY }}
        run: |
          bash .github/workflows/integration_tests.sh

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE_CONTENT }}" > .env

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build Docker Image
        run: |
          docker buildx create --use --name builder || docker buildx use builder
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache \
                              --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
                              --tag ghcr.io/taehyeonpark/muruk:latest \
                              --push .

      - name: Remove old cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
